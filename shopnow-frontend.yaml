apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shopnow-frontend
  name: shopnow-frontend-deployment
  namespace: shopnow
spec:
  replicas: 1
  revisionHistoryLimit: 11
  selector:
    matchLabels:
      app: shopnow-frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: shopnow-frontend
      namespace: shopnow-frontend
    spec:
      containers:
        - image: thuanlp/shopnow_frontend:v1
          imagePullPolicy: Always
          name: shopnow-frontend
          ports:
            - containerPort: 80
              name: tcp
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "250m"
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 20
            failureThreshold: 5
          
      imagePullSecrets:
      - name: dockerhub
---
apiVersion: v1
kind: Service
metadata:
  name: shopnow-frontend-service
  namespace: shopnow
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: tcp
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: shopnow-frontend
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shopnow-frontend-ingress
  namespace: shopnow
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - shopnow.lptdevops.website
    secretName: shopnow-tls  
  rules:
    - host: shopnow.devopseduvn.live
      http:
        paths:
          - backend:
              service:
                name: shopnow-frontend-service
                port:
                  number: 80
            path: /
            pathType: Prefix